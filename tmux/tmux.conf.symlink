set -g default-terminal "screen-256color"

set -g mode-mouse on

# C-a, not C-b
set-option -g prefix C-a
bind-key C-a last-window
bind-key a send-prefix

unbind A
bind A command-prompt "rename-window %%"

# fat fingers: C-a C-n == C-a n
bind-key C-n next-window
bind-key C-p previous-window
bind-key C-c new-window

# Split panes preserve path
bind-key % split-window -h -c '#{pane_current_path}'
bind-key '"' split-window -c '#{pane_current_path}'

# Faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Status bar
set -g status-bg white
set -g status-fg black
set -g status-left ""
set -g status-right "#[fg=white]#H"
set-window-option -g window-status-current-bg red
set-window-option -g window-status-current-fg white


### Solarized
### https://github.com/seebi/tmux-colors-solarized

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# http://robots.thoughtbot.com/post/2166174647/love-hate-tmux
set-option -s escape-time 10

### vi stuff

set-window-option -g mode-keys vi
set-option -g status-keys vi

# bind-key h select-pane -L
# bind-key ^H select-pane -L
# bind-key k select-pane -U
# bind-key ^K select-pane -U
# bind-key j select-pane -D
# bind-key ^J select-pane -D
# bind-key l select-pane -R
# bind-key ^L select-pane -R

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# set-option -g default-command "reattach-to-user-namespace -l zsh"

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# C-a C-l clears screen
bind C-l send-keys 'C-l'
